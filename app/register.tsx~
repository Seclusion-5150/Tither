import { supabase } from '@/services/supabase';
import { useState } from 'react';
import { TextInput } from 'react-native';
import { Pressable, Text } from 'react-native';
import { router } from 'expo-router';
import { Image } from 'expo-image';
import { Platform, StyleSheet } from 'react-native';
import { Alert } from 'react-native';

import { HelloWave } from '@/components/hello-wave';
import ParallaxScrollView from '@/components/parallax-scroll-view';
import { ThemedText } from '@/components/themed-text';
import { ThemedView } from '@/components/themed-view';
import { Link } from 'expo-router';

export default function RegistrationScreen() {
  	const [username, setUsername] = useState('');  
  	const [password, setPassword] = useState('');
  	const [email, setEmail] = useState('');
	const [firstName, setFirstName] = useState('');
  	const [lastName, setLastName] = useState('');
	const [middleName, setMiddleName] = useState('');
	const [phoneNumber, setPhoneNumber] = useState('');
	
 	const registerUser = async () => {
	
	  const { error: authError, data: authData } = await supabase.auth.signUp({
  		email: email,
  		password: password});
	
	  if (authError) {
		Alert.alert('Error', 'Failed to sign up');
		return;
	  }
		
	  const { error: userError, data: userData } = await supabase
  	    .from("user")
  	    .insert({
    	    id: authData.user?.id,
    	    username: username,
   	    first_name: firstName,
    	    middle_name: middleName,
	    last_name: lastName,
	    phone: phoneNumber,
  	    });
	
	
	  if (userError) {
		Alert.alert('Error', 'Failed to update user database');
		console.log('Error: ', userError)
		return;
	  }
	  Alert.alert('Success', 'Successfully Created Account!');
	  router.push('./login');
   	};
	
  	const registerUser = () => {
  		router.push({
			pathname: './registration-confirmation',
			params: {
			  username: 	username,
		  	  password: 	password,
			  email:    	email,
			  phoneNumber:  phoneNumber,
		     	  firstName:    firstName,
			  middleName: 	middleName,
			  lastName:   	lastName  
			}
		});
	};

	return (
		<ParallaxScrollView
			
      		headerBackgroundColor={{ light: '#FFFFFF', dark: '#000000' }}
		headerImage={
        	<Image
          		source={require('@/assets/images/Tither_Logo.png')}
          		style={styles.titherLogo}
        	/>
		}>
		  <ThemedView style={styles.titleContainer}>
		  <ThemedText type="title">Register</ThemedText>
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Username</ThemedText>
     		  <TextInput style={styles.input} value={username} 
		  onChangeText={setUsername}/>
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Password</ThemedText>	
     		  <TextInput style={styles.input} value={password}
		  onChangeText={setPassword} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">E-mail</ThemedText>
     		  <TextInput style={styles.input} value={email} 
		  onChangeText={setEmail}  />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">First Name</ThemedText>
     		  <TextInput style={styles.input} value={firstName}
		  onChangeText={setFirstName} />
		</ThemedView>
		  <ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Middle Name</ThemedText>
     		  <TextInput style={styles.input} value={middleName}
		  onChangeText={setMiddleName} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Last Name</ThemedText>
     		  <TextInput style={styles.input} value={lastName}
		  onChangeText={setLastName} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		 <ThemedText type="subtitle">Phone Number</ThemedText>
     		 <TextInput style={styles.input} value={phoneNumber}
		 onChangeText={setPhoneNumber} />
     		  <TextInput style={styles.input} value={username} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Password</ThemedText>	
     		  <TextInput style={styles.input} value={password} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">E-mail</ThemedText>
     		  <TextInput style={styles.input} value={email} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">First Name</ThemedText>
     		  <TextInput style={styles.input} value={firstName} />
		</ThemedView>
		  <ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Middle Name</ThemedText>
     		  <TextInput style={styles.input} value={middleName} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		  <ThemedText type="subtitle">Last Name</ThemedText>
     		  <TextInput style={styles.input} value={lastName} />
		</ThemedView>
		<ThemedView style={styles.labelContainer}>
		 <ThemedText type="subtitle">Phone Number</ThemedText>
     		 <TextInput style={styles.input} value={phoneNumber} />
		</ThemedView>

      		<Pressable
      		  style={styles.registerButton}
		  onPress={registerUser}>
      		  <Text style={styles.loginButtonText}>Register Now</Text>
      		</Pressable>
		</ParallaxScrollView>
		);
}



const styles = StyleSheet.create({
  titleContainer: {
    flexDirection: 'row',
    alignItems: 'center',
    gap: 8,
  },
  titherLogo: {
    height: 178,
    width: 290,
    bottom: 0,
    left: 72,
    position: 'absolute',
  },
  labelContainer: {
    gap: 8,
    marginBottom: 8,
  },
  input: {
	borderWidth: 1,
	borderColor: '#000',
	borderRadius: 8,
	padding: 12,
	fontSize: 16,
	backgroundColor: '#fff',
  },
  registerButton: {
  	height: 44,
	width: 150,
	borderColor: '#000',
	borderRadius: 8,
	padding: 12,
	backgroundColor: '#fff',
	justifyContent: 'center',
	alignItems: 'center',
  },
  loginButtonText: {
  	color: '#000',
	fontSize: 16,
	fontWeight: 'bold',
	letterSpacing: 0.5,
  },
});



