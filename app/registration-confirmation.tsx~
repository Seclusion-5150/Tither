import { router } from 'expo-router';

import { useLocalSearchParams } from 'expo-router';
import { View, Text, Alert } from 'react-native';
import { useEffect, useState } from 'react';

export default function RegistrationConfirmationPage() {
  
  // Receive the parameters sent from register page
  const params = useLocalSearchParams();
  
  // Extract individual parameters
  const firstName = params.firstName as string;
  const middleName = params.middleName as string;
  const lastName = params.lastName as string;
  const email = params.email as string;
  const phoneNumber = params.phoneNumber as string;
  const username = params.username as string;
  const password = params.password as string;

  // State to track verification status
  const [isVerifying, setIsVerifying] = useState(true);
  const [verificationResults, setVerificationResults] = useState({
    usernameAvailable: false,
    accountCreated: false,
    databaseUpdated: false
  });

  // This function runs when the page loads
  useEffect(() => {
    verifyRegistration();
  }, []); // Empty array means run once when page loads

  return (
    <View>
      {/* Your JSX here */}
    </View>
  );
}

 const verifyRegistration = async () => {
	
	const { error: authError, data: authData } = await supabase.auth.signUp({
  		email: email,
  		password: password});
	
	if (authError) {
		Alert.alert('Error', 'Failed to sign up');
		return;
	}
		
	const { error: userError, data: userData } = await supabase
  	  .from("user")
  	  .insert({
    	  id: authData.user?.id,
    	  username: username,
   	  first_name: firstName,
    	  middle_name: middleName,
	  last_name: lastName,
	  phone: phoneNumber,
  	  });
	
	
	if (userError) {
		Alert.alert('Error', 'Failed to update user database');
		return;
	}
 };




